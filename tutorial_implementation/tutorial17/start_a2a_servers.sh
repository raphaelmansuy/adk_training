#!/bin/bash

# Start A2A Servers - Official ADK Implementation using to_a2a() function
# This script starts all remote agents using uvicorn and the to_a2a() function

echo "🚀 Starting ADK A2A servers using to_a2a() function..."

# Function to check if a port is in use
check_port() {
    local port=$1
    if lsof -Pi :$port -sTCP:LISTEN -t >/dev/null; then
        return 0  # Port is in use
    else
        return 1  # Port is free
    fi
}

# Function to wait for server to be ready
wait_for_server() {
    local port=$1
    local agent_name=$2
    local max_attempts=30
    local attempt=1
    
    echo "⏳ Waiting for $agent_name to be ready on port $port..."
    
    while [ $attempt -le $max_attempts ]; do
        if curl -s "http://localhost:$port/.well-known/agent-card.json" >/dev/null 2>&1; then
            echo "✅ $agent_name is ready on port $port"
            return 0
        fi
        sleep 1
        attempt=$((attempt + 1))
    done
    
    echo "❌ $agent_name failed to start on port $port"
    return 1
}

# Clean up any existing processes on our ports
echo "🧹 Cleaning up existing processes..."
pkill -f "uvicorn.*research_agent\|uvicorn.*analysis_agent\|uvicorn.*content_agent" 2>/dev/null || true
sleep 2

# Start Research Agent (port 8001) using uvicorn + to_a2a()
echo "🔬 Starting Research Agent on port 8001..."
uvicorn research_agent.agent:a2a_app --host localhost --port 8001 &
RESEARCH_PID=$!
echo "   PID: $RESEARCH_PID"

# Start Analysis Agent (port 8002) using uvicorn + to_a2a()
echo "📊 Starting Analysis Agent on port 8002..."
uvicorn analysis_agent.agent:a2a_app --host localhost --port 8002 &
ANALYSIS_PID=$!
echo "   PID: $ANALYSIS_PID"

# Start Content Agent (port 8003) using uvicorn + to_a2a()
echo "✍️  Starting Content Agent on port 8003..."
uvicorn content_agent.agent:a2a_app --host localhost --port 8003 &
CONTENT_PID=$!
echo "   PID: $CONTENT_PID"

# Wait for all servers to be ready
echo ""
echo "🔄 Waiting for all agents to be ready..."

if wait_for_server 8001 "Research Agent" && \
   wait_for_server 8002 "Analysis Agent" && \
   wait_for_server 8003 "Content Agent"; then
    
    echo ""
    echo "🎉 All A2A servers are running successfully!"
    echo ""
    echo "📋 Server Status:"
    echo "   • Research Agent:  http://localhost:8001  (PID: $RESEARCH_PID)"
    echo "   • Analysis Agent:  http://localhost:8002  (PID: $ANALYSIS_PID)"
    echo "   • Content Agent:   http://localhost:8003  (PID: $CONTENT_PID)"
    echo ""
    echo "🔗 Agent Cards (auto-generated by to_a2a()):"
    echo "   • Research: http://localhost:8001/.well-known/agent-card.json"
    echo "   • Analysis: http://localhost:8002/.well-known/agent-card.json"
    echo "   • Content:  http://localhost:8003/.well-known/agent-card.json"
    echo ""
    echo "🏃 Ready for orchestration! Start your orchestrator with:"
    echo "   adk web a2a_orchestrator/"
    echo ""
    echo "🛑 To stop all servers, run: ./stop_a2a_servers.sh"
    
else
    echo ""
    echo "❌ Some servers failed to start. Check the logs for errors."
    echo "💡 Try running './stop_a2a_servers.sh' and then './start_a2a_servers.sh' again"
    exit 1
fi