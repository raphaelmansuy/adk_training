# Tutorial 27: Third-Party Tools Integration
# Demonstrates LangChain and CrewAI tool integration with ADK

.PHONY: help setup dev test clean demo

# Default target - show help
help:
	@echo "üöÄ Tutorial 27: Third-Party Tools Integration"
	@echo ""
	@echo "Quick Start Commands:"
	@echo "  make setup     - Install dependencies"
	@echo "  make dev       - Start the agent"
	@echo "  make demo      - Show demo prompts and usage"
	@echo ""
	@echo "Advanced Commands:"
	@echo "  make test      - Run all tests"
	@echo "  make clean     - Clean up generated files"
	@echo ""
	@echo "üí° First time? Run: make setup && make dev"

# Setup environment
setup:
	@echo "üì¶ Installing dependencies..."
	pip install -r requirements.txt
	pip install -e .
	@echo "‚úÖ Setup complete! Run 'make dev' to start the agent."

# Start development server
dev: check-env
	@echo "ü§ñ Starting Third-Party Tools Agent..."
	@echo "üì± Open http://localhost:8000 in your browser"
	@echo "üéØ Select 'third_party_agent' from the dropdown"
	@echo ""
	@echo "üí° Try these research queries:"
	@echo "   ‚Ä¢ 'What is quantum computing?' (Wikipedia)"
	@echo "   ‚Ä¢ 'Latest AI developments this year' (Web search)"
	@echo "   ‚Ä¢ 'Tell me about Ada Lovelace' (Wikipedia)"
	@echo "   ‚Ä¢ 'Current news about space exploration' (Web search)"
	@echo "   ‚Ä¢ 'Show me the project structure' (Directory read)"
	@echo "   ‚Ä¢ 'Read the README file' (File read)"
	@echo ""
	adk web

# Run all tests
test: check-env
	@echo "üß™ Running tests..."
	pytest tests/ -v --tb=short

# Show demo prompts
demo:
	@echo "üéØ Third-Party Tools Integration Demo"
	@echo ""
	@echo "This tutorial demonstrates:"
	@echo "  ‚úÖ LangChain Wikipedia tool integration"
	@echo "  ‚úÖ LangChain DuckDuckGo web search tool"
	@echo "  ‚úÖ CrewAI DirectoryReadTool integration"
	@echo "  ‚úÖ CrewAI FileReadTool integration"
	@echo "  ‚úÖ Proper import paths (google.adk.tools.langchain_tool)"
	@echo "  ‚úÖ Tool wrapping with LangchainTool and custom functions"
	@echo "  ‚úÖ No API keys required for any tool"
	@echo ""
	@echo "Try these research queries:"
	@echo "1. 'What is quantum computing?' (Wikipedia)"
	@echo "2. 'Latest AI developments this year' (Web search)"
	@echo "3. 'Tell me about Ada Lovelace' (Wikipedia)"
	@echo "4. 'Current news about space exploration' (Web search)"
	@echo "5. 'Show me the project structure' (Directory read)"
	@echo "6. 'Read the README file' (File read)"
	@echo ""
	@echo "üí° Run: make dev"
	@echo "üî¨ Run: make test"

# Clean up cache files
clean:
	@echo "üßπ Cleaning up..."
	find . -type d -name __pycache__ -exec rm -rf {} + 2>/dev/null || true
	find . -type f -name "*.pyc" -delete 2>/dev/null || true
	find . -type f -name "*.pyo" -delete 2>/dev/null || true
	find . -type d -name "*.egg-info" -exec rm -rf {} + 2>/dev/null || true
	find . -type d -name .pytest_cache -exec rm -rf {} + 2>/dev/null || true
	find . -type d -name .coverage -exec rm -rf {} + 2>/dev/null || true
	@echo "‚úÖ Cleanup complete!"

# Check environment (internal use)
check-env:
	@if [ -z "$$GOOGLE_API_KEY" ] && [ -z "$$GOOGLE_APPLICATION_CREDENTIALS" ]; then \
		echo "‚ùå Error: Authentication not configured"; \
		echo ""; \
		echo "Choose one of the following authentication methods:"; \
		echo ""; \
		echo "üîë Method 1 - API Key (Gemini API):"; \
		echo "   export GOOGLE_API_KEY=your_api_key_here"; \
		echo "   Get a free key at: https://aistudio.google.com/app/apikey"; \
		echo ""; \
		echo "üîê Method 2 - Service Account (VertexAI):"; \
		echo "   export GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account.json"; \
		echo "   export GOOGLE_CLOUD_PROJECT=your_project_id"; \
		echo "   Create credentials at: https://console.cloud.google.com/iam-admin/serviceaccounts"; \
		echo ""; \
		exit 1; \
	fi
